[{"C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\index.js":"1","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\App.js":"2","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\task\\Task.js":"3","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\taskForm\\TaskForm.js":"4","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\tasksList\\TasksList.js":"5","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\reportWebVitals.js":"6","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\services\\tasks.service.js":"7","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\listPage\\ListPage.js":"8","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\menu\\Menu.js":"9","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\taskDetails\\TaskDetails.js":"10","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\hello\\Hello.js":"11"},{"size":500,"mtime":1607801447746,"results":"12","hashOfConfig":"13"},{"size":1658,"mtime":1632382101838,"results":"14","hashOfConfig":"15"},{"size":2162,"mtime":1632382013425,"results":"16","hashOfConfig":"15"},{"size":777,"mtime":1619768794550,"results":"17","hashOfConfig":"15"},{"size":592,"mtime":1632382022621,"results":"18","hashOfConfig":"15"},{"size":362,"mtime":1607801447746,"results":"19","hashOfConfig":"13"},{"size":2339,"mtime":1633891783589,"results":"20","hashOfConfig":"15"},{"size":2688,"mtime":1632382076258,"results":"21","hashOfConfig":"15"},{"size":771,"mtime":1632320427485,"results":"22","hashOfConfig":"15"},{"size":1375,"mtime":1632381832438,"results":"23","hashOfConfig":"15"},{"size":256,"mtime":1619768794538,"results":"24","hashOfConfig":"15"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"hxe1j7",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"3hqtw5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\index.js",[],["51","52"],"C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\App.js",["53"],"import React, { useState, useEffect } from \"react\"\r\nimport \"./App.css\"\r\nimport ListPage from \"./components/listPage/ListPage\"\r\nimport Hello from \"./components/hello/Hello\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\"\r\nimport TaskDetails from \"./components/taskDetails/TaskDetails\"\r\n\r\nfunction App() {\r\n  \r\n  const [selectedTaskName, setSelectedName] = useState(\"\")\r\n  console.log('selectedTaskName: ', selectedTaskName);\r\n\r\n\r\n \r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {/*\r\n          A <Switch> looks through all its children <Route>\r\n          elements and renders the first one whose path\r\n          matches the current URL. Use a <Switch> any time\r\n          you have multiple routes, but you want only one\r\n          of them to render at a time\r\n        */}\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/hello\" />\r\n          </Route>\r\n          <Route exact path=\"/hello\">\r\n            <Hello value=\"Welcome to my web site\" />\r\n          </Route>\r\n\r\n          <Route exact path=\"/tasks\">\r\n            <ListPage\r\n              selectedTaskName={selectedTaskName}\r\n              setSelectedName={setSelectedName}\r\n            />\r\n          </Route>\r\n\r\n          <Route exact path=\"/tasks/:taskId\">\r\n            <TaskDetails\r\n              setSelectedName={setSelectedName}\r\n              selectedTaskName={selectedTaskName}\r\n            />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Hello value=\"Welcome to my web site\" />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\task\\Task.js",["54","55"],"C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\taskForm\\TaskForm.js",[],"C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\tasksList\\TasksList.js",[],"C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\reportWebVitals.js",[],["56","57"],"C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\services\\tasks.service.js",["58"],"C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\listPage\\ListPage.js",["59"],"import React, { useState, useEffect } from \"react\"\r\nimport \"./ListPage.css\"\r\nimport TaskForm from \"../taskForm/TaskForm\"\r\nimport TasksList from \"../tasksList/TasksList\"\r\nimport Menu from \"./../menu/Menu\"\r\nimport {\r\n  fetchTasks,\r\n  fetchTasksByFilter,\r\n  addTask as addTaskFromService,\r\n  deleteTask as deleteTaskFromService,\r\n  updateTask as updateTaskFromService,\r\n} from \"../../services/tasks.service\"\r\n\r\nfunction ListPage({ selectedTaskName, setSelectedName }) {\r\n  const [loading, setLoading] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  const [isVisible, setIsVisible] = useState(true)\r\n  const toggleVisibility = () => {\r\n    setIsVisible(!isVisible)\r\n  }\r\n  // 2Ã¨me forme de useEffect\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true)\r\n      try {\r\n        const result = await fetchTasks()\r\n        setTasks(result)\r\n        setLoading(false)\r\n      } catch (e) {\r\n        console.log(\"error\")\r\n        setLoading(false)\r\n      }\r\n    }\r\n    console.log(\"useEffect\")\r\n    fetchData()\r\n  }, [])\r\n\r\n  const addTask = async (title, duration) => {\r\n    try {\r\n      setLoading(true)\r\n      const newTask = await addTaskFromService({\r\n        title,\r\n        duration,\r\n      })\r\n      setTasks([...tasks, newTask])\r\n      setLoading(false)\r\n    } catch (e) {\r\n      console.log(\"error\")\r\n    }\r\n  }\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      setLoading(true)\r\n      await deleteTaskFromService(id)\r\n      const newTasks = tasks.filter((task) => task.id !== id)\r\n      setTasks(newTasks)\r\n      setLoading(false)\r\n    } catch (e) {\r\n      console.log(\"error\")\r\n    }\r\n  }\r\n\r\n  const updateTask = async (id, title, duration) => {\r\n    try {\r\n      setLoading(true)\r\n      const newTask = await updateTaskFromService(id, {\r\n        title,\r\n        duration,\r\n      })\r\n      const newTasks = tasks.map((task) => (task.id === id ? newTask : task))\r\n      setTasks(newTasks)\r\n      setLoading(false)\r\n    } catch (e) {\r\n      console.log(\"error\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-view\">\r\n      <Menu selectedTaskName={selectedTaskName} />\r\n      <div className=\"toggle\">\r\n        <button onClick={toggleVisibility}>Toggle visibility</button>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <TaskForm addTask={addTask} />\r\n\r\n          {loading && <div>Loading ... </div>}\r\n          {!loading && isVisible && (\r\n            <TasksList\r\n              tasks={tasks}\r\n              deleteTask={deleteTask}\r\n              updateTask={updateTask}\r\n              setSelectedName={setSelectedName}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListPage\r\n","C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\menu\\Menu.js",["60"],"C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\taskDetails\\TaskDetails.js",["61"],"C:\\Users\\Yosr\\Desktop\\reactjs\\formationreact\\src\\components\\hello\\Hello.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":36},{"ruleId":"66","severity":1,"message":"70","line":3,"column":10,"nodeType":"68","messageId":"69","endLine":3,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":37,"column":6,"nodeType":"73","endLine":37,"endColumn":18,"suggestions":"74"},{"ruleId":"62","replacedBy":"75"},{"ruleId":"64","replacedBy":"76"},{"ruleId":"66","severity":1,"message":"77","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":13},{"ruleId":"66","severity":1,"message":"78","line":8,"column":3,"nodeType":"68","messageId":"69","endLine":8,"endColumn":21},{"ruleId":"66","severity":1,"message":"70","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"79","line":29,"column":6,"nodeType":"73","endLine":29,"endColumn":12,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSelectedName' and 'titleToUpdate'. Either include them or remove the dependency array. If 'setSelectedName' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["83"],["81"],["82"],"'Axios' is defined but never used.","'fetchTasksByFilter' is defined but never used.","React Hook useEffect has a missing dependency: 'setSelectedName'. Either include it or remove the dependency array. If 'setSelectedName' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [setSelectedName, titleToUpdate, updateMode]",{"range":"89","text":"90"},"Update the dependencies array to be: [setSelectedName, task]",{"range":"91","text":"92"},[1004,1016],"[setSelectedName, titleToUpdate, updateMode]",[860,866],"[setSelectedName, task]"]